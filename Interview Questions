#1. How many types of browsers available in webdriver
IE, Safari, chrome, FireFox

#2. Can we run the parallel testing without TestNG
Yes I guess using Junit we can do parallel testing as Junit has it's own annotations 

#3. What is serialisation and Deserialization in Rest assured- 
Send body to post method using java object serialisation
.extract()
.responce()

String name= res.asTring()
JsonPath jsPath= new JsonPath(name)
String atculaName= jspath.get(name.username)
atculaName.equalTo("Sushant")

Read more in the Rest API documents


#4. What is spec builders - RequestspectBuilder, ResponceSpecBuilder 
RequestspectBuilder.setBaseURI("");
RequestspectBuilder.setBasePath("");
RequestspectBuilder.queryparam();

ResponceSpecBuilder.expectedStatusCode()


given()
.spec(rspect)

when()
.get()

then()
.spec(resSpec)

#5. What are the packages you have used in Rest assured - RestAssured, Json parser, JSon scema validator, TestNG, hamcrest matchers, Junit, Selenium

#6. Some basic questions of framework and oops implementation in it 


#7. Abstraction & where it is used in your project?


#8. Diff between Abstract class & interface ?
abstarct class - Can write abrstact methods which dont have body as well as public void methods as well

interface Animal - Can write abstact methods only, from java 8 we can write the default and static methods as well

Default - same class and package cant outside even those inherit 


#9. How many times you can write catch block ?- 
Every try block should have a atlease one catch block 

We can add multiple catch block to single try block if more that one type of expection need to handle

becasue there will be more expection such as TimeOut expection, IO expection, File Not found expection, array Out of bound expection

So we can handle those using different catch 

Every try catch block not have a finally - if we want to excuete something after exception comes then need to write finally block
Finally block always excutes even exception comes


#10. Can we declare many interfaces object class inside the interface class (abstract class classname), (interface nameOfinterface)


#11. What is difference between assert and verify. assert comes executions get stop when verify comes(soft assertaion)


#12. SQL where clause, aggregation, group.

#13. Difference between break and continue statement.
Break - break the loop stop the excutions 
Continue - Continue the loop even some condition check



#14. What will you do if after release of software the particular thing working fine but in one day after release it is not working what action will you take on this?
Reproduce the problem.
Analyze the problem
How old is it?
What is the impact?
Prioritize the problem
Fix and deploy 
Analysing the root cause 



#15. Request method In Postman - 
GET, POST, PUT, PATCH, DELETE

#16. How you cover end to end API Testing 

#17. Why Selenium? - Open source, Perform on different browser, multiple time same action performed, flexible with languages


#18. How to customize the complexity in testing - 


#19. How to prioritise testcase -

#20. Code Coverage in Testing - Number of line code those are successufully validate under the testing procedure 

Devloper writes the Test for a key feautes and validate that under the code to make sure those are working 


#21. Difference between list and set- 
Set - unordered , contains different/non duplicate (distinct) elements
Not allowed to add same elements or duplicate
Not having any get method - can’t get a particular element using .get or anything
EG. HashSet


List - ordered, can contain the null as well as same or duplicate elements
Allow you to add same elements
We get element by using .get(indexing)
EG. LinkedList and ArrayList.



#22. Difference between static and non static methods- 
Static method can not be override, also static methods need less memory 

Static valibale can access only on static methods 

static vaibale also can not be overide 

#23. How to write xpath of column 'b' value using column 'a' text - 
using the following-sibling


#23. About Maven - clean build - 
Clean all the complile java code 



#24. write a program for getting sample word which is in this order
Sample
Sampl
Samp
Sam
Sa
S

#25. what is the difference between data abstraction and encapsulation where you have implemented in your project.

#26. How To sort elements in list 

Collections.sort(list) //

Collections.sort(list, Collections.reverseOrder());


For array - 

Arrays.sort(arraname)
Arrays.sort( arrayOfItems, Collections.reverseOrder() );  


#27. #WebDriver driver= new ChromeDriver() - Explain 

WebDriver is an interface which implemented in RemoteWebDriver Class which is extends by classes such as ChromeDriver, FireFoxDriver, IEDriver
 
So actually ChromeDriver implements methods of WebDriver interface 

And if we write only 
 
ChromeDriver driver= new ChromeDriver()

Then it will only usable for chrome drive


#28. #Long or int - 

Byte - 1byte
Short- 2 bytes
Int - 4bytes
Long - 8 bytes

Float- 4 bytes

Double - 8 bytes


#29. #String buffer and String builder difference - 
StringBuffer - synchronized, two threads not called in one time, so takes more time 

SttringBuilder - unsynchronized, two threads cal called in one time, not takes to time 

So StringBuilder performance is good than the StringBuffer

#30. Pattern Code - 



#31.
Use Case - How to use the feature 

Test Case - Test the Feature with actual and expected results and input and output

Verification - Check the documents of structure, coding, designing to make sure all requirements are captured in documents 

Validation - To validate the all requirements meets in the application, testing part of application 

Volume testing - Testing the software under the huge amount of data, so king of add multiple data into the application and check data loss (flood testing)

Load Testing - check the expected load when multiple user comes to the application at the same 
time where the application get crashed or application works smoothly 

Risk Analytic - 


#Things under the Test plan 

#Test Cases sequence when adding like add, edit, delete


#32. JavaScriptExecutor js= (JavaScriptExecutor)driver;

Js.excuteScript(“document.getElementByName (‘name’)”) to find the element using JS 
js.excuteScript(“document.getElementByID (‘username’).value= ‘google’;”)  to send the value using JS 


#33. Why WebDriver driver = new ChromeDriver();

#34. SQL where clause, aggregation, group.

#35. Can we declare many interfaces object class inside the interface class 


