#1. How many types of browsers available in webdriver
IE, Safari, chrome, FireFox

#2. Can we run the parallel testing without TestNG
Yes I guess using Junit we can do parallel testing as Junit has it's own annotations 

#3. What is serialisation and Deserialization in Rest assured- 
Send body to post method using java object serialisation
.extract()
.responce()

String name= res.asTring()
JsonPath jsPath= new JsonPath(name)
String atculaName= jspath.get(name.username)
atculaName.equalTo("Sushant")

Read more in the Rest API documents


#4. What is spec builders - RequestspectBuilder, ResponceSpecBuilder 
RequestspectBuilder.setBaseURI("");
RequestspectBuilder.setBasePath("");
RequestspectBuilder.queryparam();

ResponceSpecBuilder.expectedStatusCode()


given()
.spec(rspect)

when()
.get()

then()
.spec(resSpec)

#5. What are the packages you have used in Rest assured - RestAssured, Json parser, JSon scema validator, TestNG, hamcrest matchers, Junit, Selenium

#6. Some basic questions of framework and oops implementation in it 


#7. Abstraction & where it is used in your project?


#8. Diff between Abstract class & interface ?
abstarct class - Can write abrstact methods which dont have body as well as public void methods as well

interface Animal - Can write abstact methods only, from java 8 we can write the default and static methods as well

Default - same class and package cant outside even those inherit 


#9. How many times you can write catch block ?- 
Every try block should have a atlease one catch block 

We can add multiple catch block to single try block if more that one type of expection need to handle

becasue there will be more expection such as TimeOut expection, IO expection, File Not found expection, array Out of bound expection

So we can handle those using different catch 

Every try catch block not have a finally - if we want to excuete something after exception comes then need to write finally block
Finally block always excutes even exception comes


#10A. Difference between the class varibale and instance variable, what is local variable - 

Just to note - instance varibale can call when we create an object of the class so inorder to acccess the instance varibale we need to create an 
object of the class and we can access that instance variable using obj.variableName

for class variable i.e static variable for which we don't need to create an object , we can access that using classname.variableName

Local variable is an varibale that are written in the method of the class ie. declared in the method of the class
A variable declared inside the body of the method is called local variable. 
You can use this variable only within that method and the other methods in the class aren't even aware that the variable exists


public class VariableExample{
   int myVariable;   // instance variable 
   static int data = 30;  //class varibale 
   
   public static void main(String args[]){
      VariableExample obj = new VariableExample();
      
      System.out.println("Value of instance variable: "+obj.myVariable);
      System.out.println("Value of static variable: "+VariableExample.data);
   }
}


#10B. Reference variable - 
The varibale is refered to the abother varibale 

Best example of this is getter setter (Encapsulation)

Class A{
private string name; 

public void setName(String name){
this.name= name; 

}

public void getName(){
return name; 
}

}

Class B {

A obja= new A();

obja.setName("sushant");
String myNamne= obja.getName();

}

so in above example myName is refer to the name variable so it's reference varible 



#10. Can we declare many interfaces object class inside the interface class (abstract class classname), (interface nameOfinterface)

We can only write the methods in intefrace class we can not initialize the variables inside the interface, we need to decare the varibale for interface
Like int num= 10; 

#11. What is difference between assert and verify. assert comes executions get stop when verify comes(soft assertaion)


#12. SQL where clause, aggregation, group.

#13. Difference between break and continue statement.
Break - break the loop stop the excutions 
Continue - Continue the loop even some condition check



#14. What will you do if after release of software the particular thing working fine but in one day after release it is not working what action will you take on this?
Reproduce the problem.
Analyze the problem
How old is it?
What is the impact?
Prioritize the problem
Fix and deploy 
Analysing the root cause 



#15. Request method In Postman - 
GET, POST, PUT, PATCH, DELETE

#16. How you cover end to end API Testing 

#17. Why Selenium? - Open source, Perform on different browser, multiple time same action performed, flexible with languages


#18. How to customize the complexity in testing - 


#19. How to prioritise testcase -

#20. Code Coverage in Testing - Number of line code those are successufully validate under the testing procedure 

Devloper writes the Test for a key feautes and validate that under the code to make sure those are working 


#21. Difference between list and set- 
Set - unordered , contains different/non duplicate (distinct) elements
Not allowed to add same elements or duplicate
Not having any get method - can’t get a particular element using .get or anything
EG. HashSet


List - ordered, can contain the null as well as same or duplicate elements
Allow you to add same elements
We get element by using .get(indexing)
EG. LinkedList and ArrayList.



#22. Difference between static and non static methods- 
Static method can not be override, also static methods need less memory 

Static valibale can access only on static methods 

static vaibale also can not be overide 

#23. How to write xpath of column 'b' value using column 'a' text - 
using the following-sibling


#23. About Maven - clean build - 
Clean all the complile java code 



#24. write a program for getting sample word which is in this order
Sample
Sampl
Samp
Sam
Sa
S

#25. what is the difference between data abstraction and encapsulation where you have implemented in your project.

#26. How To sort elements in list 

Collections.sort(list) //

Collections.sort(list, Collections.reverseOrder());


For array - 

Arrays.sort(arraname)
Arrays.sort( arrayOfItems, Collections.reverseOrder() );  


#27. #WebDriver driver= new ChromeDriver() - Explain 

WebDriver is an interface which implemented in RemoteWebDriver Class which is extends by classes such as ChromeDriver, FireFoxDriver, IEDriver
 
So actually ChromeDriver implements methods of WebDriver interface 

And if we write only 
 
ChromeDriver driver= new ChromeDriver()

Then it will only usable for chrome drive


#28. #Long or int - 

Byte - 1byte
Short- 2 bytes
Int - 4bytes
Long - 8 bytes

Float- 4 bytes

Double - 8 bytes


#29. #String buffer and String builder difference - 
StringBuffer - synchronized, two threads not called in one time, so takes more time 

SttringBuilder - unsynchronized, two threads cal called in one time, not takes to time 

So StringBuilder performance is good than the StringBuffer

#30. Pattern Code - 



#31.
Use Case - How to use the feature 

Test Case - Test the Feature with actual and expected results and input and output

Verification - Check the documents of structure, coding, designing to make sure all requirements are captured in documents 

Validation - To validate the all requirements meets in the application, testing part of application 

Volume testing - Testing the software under the huge amount of data, so king of add multiple data into the application and check data loss (flood testing)

Load Testing - check the expected load when multiple user comes to the application at the same 
time where the application get crashed or application works smoothly 

Risk Analytic - 


#Things under the Test plan 

#Test Cases sequence when adding like add, edit, delete


#32. JavaScriptExecutor js= (JavaScriptExecutor)driver;

Js.excuteScript(“document.getElementByName (‘name’)”) to find the element using JS 
js.excuteScript(“document.getElementByID (‘username’).value= ‘google’;”)  to send the value using JS 


#33. Why WebDriver driver = new ChromeDriver(); - WebDriver is a interface 
We can also do ChromeDriver driver = new ChromeDriver(); but by initialising WebDriver driver will be used for all the browser so we can use the same driver as other
browser instance as well
also every browser class such as ChromeBrowser(), FireFoxBrowser() extends RemoteWebDriver and RemoteWebDriver implements WebDriver interface


#34. SQL where clause, aggregation, group.

#35. Can we declare many interfaces object class inside the interface class 


#36. How to prevent the class to be inherit?
Use final class - final class can not be inherit 

#37. Abstract class - Can not create object of abstract class it’s only can extends 

#38. How to excuse only failed test cases in the TestNg- 
For failed test cases - in test-output folder - testing.xml failed file get created which need to run again ignorer to excuse failed test cases in TestNg


#39. #State element Exception - Ajax call - refresh a particular component, so xpath is found BUT the Xpath ID which internally created by
WebDriver is changed (WebDriver always create an ID for element internally) and 
that is the reason the state element exception comes so we need to fix that using refresh the page of using try catch 


#40. CSS Selctor IMP - [https://www.youtube.com/watch?v=VYIDZ57mMy4]
a. Using class name - 
  Class - Using the . Classname or HTMLtag.classname

  The class name should not have a space in it so we can use .classname
  https://www.screencast.com/t/y8Ul8dlL

  Sometime classes are separated with spaces <class= “namehtnam pram-text”>

  So we can use . In between those classes like 

  .namehtnam.pram-text
  
b. ID - 
   ID - we use the # - HTML tag and #ID
   Eg. input#1240
   
C. Combine ID and class (some elemnets having ID and class name that time we can use below)
   .classname#ID
   #ID.classname 
   
D. Using two seprate attributes using CSS - 
   input[name= 'firstName'][placeholder= 'First name']
   
E. For the Dynamic elements where some elements can change at the start of end 
   textmatch of any attribute - input[name*= 'sushant']
   
   starts with - ^ - input[name^= 'sush']
   
   end with - $ - input[name$= 'ant']
   
F. Next element under element can use > (forward slash)

G. Sibling - only use forward siblings for the CSS selector using +
   ul.typeahead__list>li+li
   
H. Indexing of siblings using nth-of-type() - :nth-of-type(2)
   ul.typeahead__list>li:nth-of-type(2).  - CSS
   ul.typeahead__list>li:nth-of-type(2)
   


#41. Tooltip automation - 
Move over or click on the tooltip - using Actions.moveToElement(element), then the tooltip text is described in content or title attribute and we can get that using getAtribute ()
Tooltip element - driver.findElement(By.xpath(“”))
Element.getAttribute(“title”) or element.getAttribute(“content”)
Assert.assertEquals(Actual, expected);


#42.Color code of text validation in selenium - 

getCssValue(“color”);

So we can get the color of the element by using element.getCssValue(“color”)
Which gives color in rgba (12, 30, 34, 60) so we can covert that into hex code - 

Color.fromString(color).asHex();


Same for background color we can use getCssValue(“background - color”);


#43.Selenium Grid - 

Selenium Grid is a feature in Selenium that allows you to run test cases in different machines across different platforms.

The control of triggering the test cases is on the local machine, and when the test cases are triggered, they are automatically executed by the remote machine.

The machine which actually triggers the test case known as Hub

A. Download the selenium server on local machine, make local machin as Hub using CMD prompt, so it create the URL of hub, the URL contains the IP address and the port 

B. Download the selenium server on another machine that we want to make as Node, then using the IP of the hub we can make this machine as node of that hub using the 
CMD promt, it also gives the URL of the node wich conatin IP of node and port number

C. We need user DesiredCapabilites (for browser and OS) and the RemoteWebDriver (set the node)

Then on hub we need to initialise the Desiredcapability and RemoteWebDriver 

DesiredCapabilites cappability= DesiredCapabilites.Chrome()
cappability.setBrowserName(“chrome”);
cappability.setPlatform(Platform.XP);

WebDriver driver;
driver= new RemoteWebDriver(new URL(“URL of nodet”), capability);


   
#44. How to covert list into set - 
Using addAll() method we can add list into set or set into list

Also can add one list into another list using .addAll() method 


   
#45. Main method overload or not?
Main method can be overload
Main method can not be override as it’s static method 

Public static void main(String [] args)

JVM start program execution from the main method always so it’s static no need to create an object for the main method 


#46. Java Errors - (We can called this unchecked exception as well)
A. Assertion error 
B. Out of memory error 
C. Stack overflow error

The main difference between exception and error is exception can be handled (using try catch or throws) BUT the error can not handle

#47. Why frameworks is needed in automation - 
Standard automation process 
Lower the maintenance cost 
Reuse the code  

#48. We can add variable into interface? - Yes only static and final & public which need declared there itself 
We can not add the private varibale into interface

We can declare the static and final variable into interface so those can not override,

So the static variable can not be override and final can not be change, so if try to override it will give you compile error 


#49. CSS selector of nth element in the grid 
tbody[role= 'rowgroup']>tr:nth-of-type(1)>td:nth-of-type(8)

So we know in order to get the column data we need to pass column number in nth-of-type(8)

 Tr<> (row1)
     <td> (column 1)
     <td> (column 2)



#50. 
A. Local variable & global variable -  Local variable is method variable (Method level variable) that can use to that method only 
& global variable is viable is declared at the class level 

B. Global variable can be - class variable and instance variable - Class variable is static variable which can access using class name directly 
so no need to create object & instance variable can access by creating object of the class 


#Set and HashMap both are unordered and non duplicate key like a set 

#List<String> list= new ArrayList<String>(3);  it dose’t matter even there is size defined by user

#Final class - yes we can create an object of the final class just we are stopping that class to get inherited 

#Convert the int into string - 

String result= Integer.toString(int)

#Convert the String to int 

Int num= Integer.parseInt(string);

#Wrapper class primitive data types for array and list - 

#Array supports both the primitive data types and wrapper class, so wrapper class we used to convert the primitive data type into the objects 

String number = Integer.toString(10);
int no = Integer.parseInt(100);

Premitive data Types - 
int 
float
double

String is not a premitive data type in JAVA, it's not premitive data type 

Wrapper class Eg.
Integer 
Double 
Character 

Collections such as ArrayList, LinkedList, HashSet, HashMap, LinkedHashSet only allows wrapper classes


Int [] noArr= new int[2];
OR
Integer [] noArr= new Integer[2];


#Default value 0f boolean is false;

#Default value of int is 0;

#compare - compare is used for the int value comparison - Integer.compare(10, 10)
always return int value of 0 then int matches
Int result= Integer.compare(10, 10);


#compareTo() - For String comparisons always return int value of 0 then string matches
Int result = s1.compareTo(s2)

if(result ==0) - Then S1 is matching with S2

##App Deployment details - 
#Azure Devops - 
Created pipeline for the executions of the builds (deployments) so it deploy the application on respective pods one by one 

#Docker software platform that allows you to build, test, and deploy applications quickly- Build the application, share & run in the form of containers 
(Docker file contains all the pre requesites softwares which are required to run the application)

#Kubernet services 
Cluster (Set of nodes that run the application using PODS) - Dev (multiple pods) Stage (multiple pods) & Production (multiple pods)
Node - A node may be a virtual or physical machine
Pods (Pods contains the one or more application and responsible for execution for those application) - nodes contain the collection of pods 

Kubectl need to install in order to run the different commands for kubernet clusters 

kubectl get pods - Which will provide the pods 

