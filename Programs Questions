#ExplicitWait 
#FluentWait
#Screenhots
#Excel read 
#broken links


#String Questions - 
#First duplicate char
#Remove spaces
#Reverse String 
#Count of same char 
#prime number
#Factorial 



#1. How remove white spaces from the string - 
1. Using String replaceAll(“\\s”, “”)
2. String str = "India Is My Country";  
3. 	 
4. 	 char[] myname= str.toCharArray();
5. 	 StringBuffer strBuild= new StringBuffer();
6. 	 
7. 	 for(int i=0; i<myname.length;i++){
8. 	     
9. 	     if(myname[i]!= ' '){
10. 	         
11. 	         strBuild.append(myname[i]);
12. 	     }
13. 	 }
14. 	 
15. 	 System.out.println(strBuild);


#2. Fluent Wait - 
Wait<WebDriver> wait= new FluentWait<WebDriver>(driver)
.withTimeout(10, TimeUnits.SECONDS)
.pollingEvery(20, TimeUnits.SECONDS)
.ignoring(NoSuchElementExpection.class);

WebElement linkBtn= wait.until(new Function<WebDriver, WebElement>(){
  Public WebElement Apply(WebDriver driver){
     Return 
     Driver.findEleent(By.xpath(“//”)); 
      }       
});


#3. prime number -  Conditon [number% (2 to number) ==0] should not satisfield 

public void checkChar() {
		
		int num= 30;
		boolean flag= false;
		
		for(int i=2; i<num; i++) {
			
			if(num%i==0) {
				flag=true;
				break;
			}
		}
		
		if(!flag) {
			System.out.println("This is prime number");
		}else {
			System.out.println("This is not a prime number");
		}
	
		
	}
  
  
  
 #4. To find the same char of the string and it's count - 
public void checkChar() {
		String name= "SuShanSt";
		int count;
		
		char [] nameQA= name.toCharArray();
		count=0;
		for(int i=0; i<nameQA.length; i++) {
			
			for(int j=i+1; j<nameQA.length;j++) {
				if(nameQA[i]==nameQA[j]) {
					System.out.println(nameQA[j]);
					count= count+1;
				}
			}
		}System.out.println(count);
		
	}
	

#5. Print dublicate numbers showing in array 
public void displaySameNUmbers() {
		int [] number={10, 20, 10, 30, 40, 10, 50, 20, 60};
		
		for(int i=0; i<=number.length-1; i++) {
			for(int j=i+1;j<=number.length-1; j++) {
				if(number[i]==number[j]) {
					System.out.println(number[j]);
				}
				
			}
			
		}
    
  
#6.   String name= "Sushant Pawar";
	    String newName= name.substring(0, 7);
	    System.out.println(newName);// Sushant
	    
	    String name= "SushantPawar@name";
	    String [] namqa= name.split("@");
	    for(String finalName: namqa){
	        System.out.println(finalName);
	    }

char[] ch={'j','a','v','a','t','p','o','i','n','t'};  //covert the char array to string 
String s=new String(ch); 
SYSO (s)// javapoints;



#7. What are the different types of string methods - 
compare(), concat(), equals(), split(), length(), replace(), compareTo(), intern(), substring() 
	    String name= "Sushant Pawar";
	    String newName= name.substring(0, 7);
	    System.out.println(newName);// Sushant
	    
	    String name= "SushantPawar@name";
	    String [] namqa= name.split("@");
	    for(String finalName: namqa){
	        System.out.println(finalName);
		

#8. If conditions such as Equals , Equaluslignorecase, not equalto 


#9. Reverse the stings - 

public class HelloWorld{

     public static void main(String []args){
         
         String name= "My Name is Sushant";
         
         StringBuilder input1 = new StringBuilder();
         
         input1.append(name);
         input1.reverse();
         System.out.println(input1);
     }
}

#Reverse the char - 
public static void main(String []args){
         
         String input = "SUSHANT";
 
        // convert String to character array
        // by using toCharArray
        char[] try1 = input.toCharArray();
 
        for (int i = try1.length - 1; i >= 0; i--)
            System.out.print(try1[i]);

         
     }
     
#String Append - 
+ operator 

String name + Staring sirname

OR using concat 
String fullname = name.concat(sirname)
	

