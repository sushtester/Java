public class Main{
   public static valid main (String[], args ){                                            Final data type, ###Java Recursion, 
   System.out.println("Hello My First Java program");
   
   }
}

public class HelloWorld{

     public static void main(String []args){
         int a= 1;
         int b= 2;
         int c = (a+b);
         String usernam= "Pravin";
        System.out.println("The addition is "+ c);
     }
}

Data types in JAVA - 

String - stores text, such as "Hello". String values are surrounded by double quotes
int - stores integers (whole numbers), without decimals, such as 123 or -123
float - stores floating point numbers, with decimals, such as 19.99 or -19.99
char - stores single characters, such as 'a' or 'B'. Char values are surrounded by single quotes
boolean - stores values with two states: true or false

Arithmetic Operators
++	Increment	Increases the value of a variable by 1

--	Decrement	Decreases the value of a variable by 1	--x

#Find the lenghth of the string - 
String name= "SUSHANT";
name.length(); 
= 7

toUpperCase() and toLowerCase()
name.toUpperCase().  name.toLowerCase()


The indexOf() method returns the index (the position) of the first occurrence of a specified text in a string (including whitespace):
String name = "Sushant Sudhir Pawar"

name.indexOf("Sudhir");  It will return the position of the Sudhir name like 9 

#String Concatenation - Add two string toghter - The + operator can be used between strings to combine them
String a= "Sushant";
String b = "Pawar";
System.out.println(a+ " " +b);
Or we can use methos concat()
System.out.println(a.concat (b));

If statement 

if (a==b){
}
else{
}

if(a==b){
}
else if (a>b){
}
else{
}


#Java Switch Statements
int day = 4;
switch (day) {
  case 1:
    System.out.println("Monday");
    break;
  case 2:
    System.out.println("Tuesday");
    break;
  case 3:
    System.out.println("Wednesday");
    break;
  case 4:
    System.out.println("Thursday");
    break;
    default:
    System.out.println("No any day for 4");
    break;
}

nested switch - switch under switch -


#While loop - 
        int year=3;
        while (year<8){
            System.out.println(year);
            year++;
            
  While loops is user when e.g when want to print 1 to 10 numbers then
  int i= 1;
  while (i<=10){
  System.out.println(i);
            i++;
  }
  
  Or We can use to calcluate 1 to 10 numbers addition total - 
  
   int num=1;
        int sum=0;
        while (num<=10){
            sum= sum+num;
            num++;
        }
        
     System.out.println(sum);
     
     
     
#For loop - We can use to calcluate 1 to 10 numbers addition total same program that did using the for loop- 

int sum=0;
        for(int i=1; i<=10; i++){
            sum= sum+i;
        }
        
        System.out.println(sum);


We can use for loop for print the array elemnts 

String names[]= {"sush", "pawar", "namskar"};

For(String result: names){
  System.out.println(result);
}


#Break statments - Which can use in for when want to break the loop - 

for (int i = 1; i<=10; i++){
 if (i==5){
  System.out.println ("Found 5 in above");
  break;
 }
}

Continue statement can use in while and for loop - 

 int i=0;
       while (i<=10){
           if (i==4){
               
               System.out.println(i);
               i++;
               continue;
               
           }
           System.out.println(i);
           i++;
           
           
           }


#Array - 

String name []= {"SUSH", "PAWAR", "QA"};
OR
String [] name = {"SUSH", "PAWAR", "QA"};


To find the length of the array - 
name.length;

To display the array elements using the for loop 

for (String result: name){
System.out.println (resluts);
}

Or we can find the length of the array and then use that in for loop - 

 for(int i= name.length-1; i>=0; i--){
          System.out.println (name[i]);
      }
      

for (int i = 0; i < cars.length; i++) {
  System.out.println(cars[i]);
  
  



##JAVA- Methods - 
#1. Method name should always start with small letter and with mix of capital letter eg. myMethod()

static - means that the method belongs to the Main class and not an object of the Main class. You will learn more about objects and how to access methods through objects later in this tutorial.
void - means that this method does not have a return value. You will learn more about return values later in this chapter

Method in main class exmaple - 
public class HelloWorld{
    
    static void addMethod(){
        int a=10;
        int b=20;
        int c= a=b;
        System.out.println(c);
    }
    

     public static void main(String []args){
         
         addMethod();
         
        System.out.println("Hello World");
        
        
        
     }
}

#Return method - 
public class HelloWorld{
    
    static int addMethod(int a, int b){
        
        int c= a+b;
        return c;
    }
    

     public static void main(String []args){
         
         int d= addMethod(20, 30);
         
        System.out.println(d);
        
        
        
     }
}



#Creating object of the class to access the class varibales - 
public class HelloWorld{
    
     String name= "Sushant";

     public static void main(String []args){
         
       HelloWorld obj = new HelloWorld();
         
        System.out.println(obj.name);
        
        
        
     }
}

###Static vs. Non-Static-








