#JAVA - 
#1. How to find the position of the text under the string 
-> indexOf()
String name= "sushant sudhir pawar sudhir";
name.indexOf("Sudhir"); // which also includes the white spaces 
name.indexOf("Sudhir", 9); // which also includes the white spaces 

#2. How to set a default condition in the switch statment 
switch(day){
case 1: 
 System.out.println(c);
 break;
 
case 1: 
 System.out.println(c);
 break;
 
default:
 System.out.println(c);
 break;
 
}

#3. print the arrays elements using for each loop 

#4.public class HelloWorld {   //What is the output of the code 
    
       void addMethod(){
        int a=10;
        int b=20;
        int c= a=b;
        System.out.println(c);
    }
     public static void main(String []args){         
         addMethod();         
        System.out.println("Hello World");       
     }
}

#4. Conact() is better than + because + operator always creates a new string BUT contact method creates new object only when string length is greater than zero

#5. How to restrict the class to be inheriate?
-> final class

#6. How to retsrict create object of the class?->
abract class/ interface class we can not create an object 

#7. this. is a instance of the class & we can not use that in static method 

#8. What happn if you try to accees the private varibale in other class - // It will throw the complile time error 

#8. What happnes if you try to modified the final varibale/attribute - // It will throw the complile time error, can not assign value to the final variable

#9. Why inheritance - Code Reusablity, Why Encapsulation - secure the data (read only for get method & write only for set method)

#10. can we acess static methods using obj of the class in java?
-> No, we can not call the static methods of the class using object of the class, those only called using the class name 

#11. Can we write the static methods in the abtract class?
-> We can write the static methods in the abstract class BUT we can not write the static method as a abtstact method(method with no body) as we can't overide the static methods

#12. Which methods in the class we can't overide?
-> static methods
-> Private method 
-> final method 

#13. OOPS in shots 
Java Encapsulation - Getter setter - to hidden the sesitive information we can use this 
Java Inheritance - To reuse the methods, varibales in the super class we use this, code reusability 
Java Interface - We use to write the abtsract methods (methods witout body), also to restric the user to create the object of the class
Java Polymorphism - To overide the methods written in the super class 

#14. Which methods we can write under the interface?
abstract methods which dosen't have a body 
static methods with body which can call directly using interface class name 
defaut method with body - This also called by class obj where the interface is implements 





